Goto Root user
sudo -i
-----------------
Set up repository
sudo apt-get update

sudo apt-get install \
apt-transport-https \
ca-certificates \
curl \
gnupg-agent \
software-properties-common

-------------------------
Add Docker's Official GPG Key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

sudo add-apt-repository \
"deb [arch=amd64] https://download.docker.com/linux/ubuntu \
$(lsb_release -cs) \
stable"
---------------

Install Docker Engine
 sudo apt-get install docker-ce docker-ce-cli containerd.io
----------------
Check Status of Docker
systemctl status docker
--------------------

curl -fsSl https://get.docker.com -o get-docker.sh
sh get-docker.sh
































____________
lifecycle

curl -fsSl https://get.docker.com -o get-docker.sh
sh get-docker.sh

docker run hello-world
docker run --name myweb -p 7089:80 -d nginx
docker run --name mycentos -d centos
dacker images
docker ps -a
docker pause CID
docker unpause
docker stop
docker strat
docker rm
docker kill
docker stats
docker top
docker history
_______________
ownimage

curl -fsSl https://get.docker.com -o get-docker.sh
sh get-docker.sh

nano Dockerfile
FROM ubuntu
MAINTAINER bhanarkarkumkum@gmail.com
RUN apt-get update -y
RUN apt-get install nginx -y
CMD ["echo","image created"]

docker build -t kumkum:0.1 .
docker tag kumkum:0.1 email/repo
docker login
docker push email/repo:0.1
docker push email/repo
docker images
docker rmi --force imaageID
docker pull email/repo:0.1

__________________________

jenkins

curl -fsSl https://get.docker.com -o get-docker.sh
sh get-docker.sh

docker pull jenkins/jenkins:lts
docker run --name -p 8080:8080 -p 50000:50000 jenkins/jenkins

_____________________________

pvt_registry

curl -fsSl https://get.docker.com -o get-docker.sh
sh get-docker.sh

docker pull registry
docker run -d -p 5000:5000 --name registry registry:latest
docker pull centos
docker tag imgID localhost:5000/centos
docker push localhost:5000/centos
docker rmi --force imgID
docker pull localhost:5000/centos

______________________________

swarm 

curl -fsSl https://get.docker.com -o get-docker.sh
sh get-docker.sh

docker info
docker swarm --help
docker swarm init
docker service  ls
docker node ls
docker service  --help
docker service create alpine ping www.google.com
docker service ls
docker service ps service  ID
docker container ls

OR

Docker swarm init
Docker service create alpine ping www.google.com
Docker container ls -a
Docker  service scale id=5
docker service ls
docker service rollback id

Docker swarm init
docker swarm join-token worker
docker node ls
_______________________________

health

mkdir health
cd health
docker container run --name pg1 -e POSTGRES_PASSWORD=mypassword -d postgres
docker ps
docker container exec -it postgres bash
$pg_isready -U postgres
$exit
$docker container run --name pg2 -e POSTGRES_PASSWORD=mypassword --health-cmd"pg_isready -U postgres ||exit1" postgres
 
$docker ps

$docker container run --name pg3 -e POSTGRES_PASSWORD=mypassword --health-cmd"pg_isready -U root ||exit1" postgres

_____________________________